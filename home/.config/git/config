[alias]
	d = diff --find-renames --find-copies -U2 --minimal --stat
	sd = diff --find-renames --find-copies -U2 --minimal --stat --staged
	co = checkout
	c = commit
	cm = commit -m
	br = branch
	st = status -sb
	pa = push --all
	ap = add -p
	lp = log -p -U2 --minimal --stat
	rmd = "!for f in $(git status | grep deleted | awk '{print $2}'); do git rm $f; done"
	l = "!f () { git log --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-50s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5 }' | less -R; }; f"
	lg = "!f () { git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-50s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }' | less -R; }; f"
	ghadd = "!f () { git remote add $1 git@github.com:$1/$2.git; git fetch $1; }; f"
	unstage = reset HEAD --
	subc = "!subs=$(git ls-files --error-unmatch --stage -- $(git ls-files --modified) | grep \"^160000\" | cut -f2-); msg=$(echo Update submodules; echo; git submodule summary); git commit -e -m \"$msg\" --only $(echo $subs | tr \"\n\" \" \")"
	subdo = submodule foreach git

[core]
	autocrlf = input
	editor = vim

[diff]
	algorithm = patience

[interactive]
	# requires perl-term-readkey
	singlekey = true

[push]
	default = simple

[user]
	name = Kim Silkebækken
	email = kim@silkebaekken.no
	signingkey = 57D43B4B
