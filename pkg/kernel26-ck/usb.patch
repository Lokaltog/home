--- a/drivers/usb/serial/qcserial.c	2010-03-25 20:04:33.219135911 +0100
+++ b/drivers/usb/serial/qcserial.c	2010-03-27 15:11:34.036133486 +0100
@@ -26,6 +26,8 @@
 	{USB_DEVICE(0x05c6, 0x9212)},	/* Acer Gobi Modem Device */
 	{USB_DEVICE(0x03f0, 0x1f1d)},	/* HP un2400 Gobi Modem Device */
 	{USB_DEVICE(0x03f0, 0x201d)},	/* HP un2400 Gobi QDL Device */
+	{USB_DEVICE(0x03f0, 0x251d)},	/* HP un2420 Gobi Modem/GPS Device */
+	{USB_DEVICE(0x03f0, 0x241d)},	/* HP un2420 Gobi QDL Device */	  
 	{USB_DEVICE(0x04da, 0x250d)},	/* Panasonic Gobi Modem device */
 	{USB_DEVICE(0x04da, 0x250c)},	/* Panasonic Gobi QDL device */
 	{USB_DEVICE(0x413c, 0x8172)},	/* Dell Gobi Modem device */
@@ -41,9 +43,11 @@
 	{USB_DEVICE(0x05c6, 0x9002)},	/* Generic Gobi Modem device */
 	{USB_DEVICE(0x05c6, 0x9202)},	/* Generic Gobi Modem device */
 	{USB_DEVICE(0x05c6, 0x9203)},	/* Generic Gobi Modem device */
+	{USB_DEVICE(0x05c6, 0x9205)},	/* Generic Gobi Modem device */
 	{USB_DEVICE(0x05c6, 0x9222)},	/* Generic Gobi Modem device */
 	{USB_DEVICE(0x05c6, 0x9008)},	/* Generic Gobi QDL device */
 	{USB_DEVICE(0x05c6, 0x9201)},	/* Generic Gobi QDL device */
+	{USB_DEVICE(0x05c6, 0x9204)},	/* Generic Gobi QDL device */
 	{USB_DEVICE(0x05c6, 0x9221)},	/* Generic Gobi QDL device */
 	{USB_DEVICE(0x05c6, 0x9231)},	/* Generic Gobi QDL device */
 	{USB_DEVICE(0x1f45, 0x0001)},	/* Unknown Gobi QDL device */
@@ -66,6 +70,7 @@
 	int retval = -ENODEV;
 	__u8 nintf;
 	__u8 ifnum;
+	__u8 altsetting;
 
 	dbg("%s", __func__);
 
@@ -77,23 +82,22 @@
 	switch (nintf) {
 	case 1:
 		/* QDL mode */
-		if (serial->interface->num_altsetting == 2) {
-			struct usb_host_interface *intf;
-
-			intf = &serial->interface->altsetting[1];
-			if (intf->desc.bNumEndpoints == 2) {
-				if (usb_endpoint_is_bulk_in(&intf->endpoint[0].desc) &&
-				    usb_endpoint_is_bulk_out(&intf->endpoint[1].desc)) {
-					dbg("QDL port found");
-					retval = usb_set_interface(serial->dev, ifnum, 1);
-					if (retval < 0) {
-						dev_err(&serial->dev->dev,
-							"Could not set interface, error %d\n",
-							retval);
-						retval = -ENODEV;
-					}
-					return retval;
+		altsetting = serial->interface->num_altsetting - 1;
+		
+		struct usb_host_interface *intf;
+		intf = &serial->interface->altsetting[altsetting];
+		if (intf->desc.bNumEndpoints == 2) {
+			if (usb_endpoint_is_bulk_in(&intf->endpoint[0].desc) &&
+					usb_endpoint_is_bulk_out(&intf->endpoint[1].desc)) {
+				dbg("QDL port found");
+				retval = usb_set_interface(serial->dev, ifnum, altsetting);
+				if (retval < 0) {
+					dev_err(&serial->dev->dev,
+						"Could not set interface, error %d\n",
+						retval);
+					retval = -ENODEV;
 				}
+				return retval;
 			}
 		}
 		break;
